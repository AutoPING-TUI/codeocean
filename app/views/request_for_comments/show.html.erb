<div class="list-group">
  <h4 class="list-group-item-heading"><%= Exercise.find(@request_for_comment.exercise_id) %></h4>
  <p class="list-group-item-text">
      <%
        user = @request_for_comment.user
        submission_id =  ActiveRecord::Base.connection.execute("select id from submissions
          where exercise_id =
          #{@request_for_comment.exercise_id} AND
          user_id =  #{@request_for_comment.user_id} AND
          '#{@request_for_comment.created_at}' > created_at
          order by created_at desc
          limit 1").first['id'].to_i
        submission = Submission.find(submission_id)
      %>
    <%= user %> | <%= @request_for_comment.requested_at %>
  </p>
</div>

<!--
do not put a carriage return in the line below. it will be present in the presentation of the source code, otherwise.
-->
<% submission.files.each do |file| %>
  <%= (file.path or "") + "/" + file.name +  file.file_type.file_extension %>
  <div id='commentitor' class='editor' data-read-only='true' data-file-id='<%=file.id%>'><%= file.content %>
  </div>
<% end %>

<script type="text/javascript">
  //(function() {
    var commentitor = $('.editor');
    var userid = commentitor.data('user-id');

    commentitor.each(function (index, editor) {
      currentEditor = ace.edit(editor);
      currentEditor.setReadOnly(true);

      setAnnotations(currentEditor, $(editor).data('file-id'));
    });

    function setAnnotations(editor, fileid) {
      var session = editor.getSession()

      var inputHtml = ''
      inputHtml += '<div class="input-group">'
      inputHtml +=   '<input type="text" class="form-control" id="commentInput' + fileid + '" '
      inputHtml +=     'placeholder="I\'d suggest a variable here" required>'
      inputHtml +=   '<span class="input-group-btn"><button id="submitComment' + fileid + '" '
      inputHtml +=     'class="btn btn-default"><%= t("exercises.implement.comment.addComment") %>!</button></span>'
      inputHtml += '</div>'

      var jqrequest = $.ajax({
          dataType: 'json',
          method: 'GET',
          url: '/comments',
          data: {
            file_id: fileid
          }
      });

      jqrequest.done(function(response){
        //data-container=".ui-front" on gutter cell
        $.each(response, function(index, comment) {
          comment.className = "code-ocean_comment"
          comment.text = comment.username + ": " + comment.text
        })

        editor.getSession().setAnnotations(response)

        $(editor.container).find('.ace_gutter-cell').popover({
          title: 'Add a comment',
          html: true,
          content: inputHtml,
          position: 'right',
          trigger: 'focus click'
        }).on('shown.bs.popover', function() {
          $('#commentInput' + fileid).focus()
          $('#submitComment' + fileid).click(_.partial(addComment, editor, fileid));
          $('#commentInput' + fileid).data('line', $(this).text())
        })
      })
    }

    function addComment(editor, fileid) {
      var commentInput = $('#commentInput' + fileid);
      var comment = commentInput.val()
      var line = $('#commentInput' + fileid).data('line')

      if (line == '' || comment == '') {
        return
      } else {
        line = parseInt(line) - 1
      }

      $.ajax({
        data: {
          comment: {
            user_id: userid,
            file_id: fileid,
            row: line,
            column: 0,
            text: comment
          }
        },
        dataType: 'json',
        method: 'POST',
        url:  "/comments"
      }).done(setAnnotations(editor, fileid))

      $('.ace_gutter-cell').popover('hide')
    }
  //})()
</script>
<style>
  #commentitor, .ace_gutter, .ace_gutter-layer { overflow: visible }
  .popover { width: 400px; max-width: none; }
</style>
